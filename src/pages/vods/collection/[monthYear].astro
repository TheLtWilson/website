---
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import Layout from '@/layouts/Layout.astro'
import VodCard from '@/components/VodCard.astro'
import { getCollection } from 'astro:content'

export async function getStaticPaths() {
  const vods = await getCollection('vods')
  const sortedVods = vods.sort(
    (a, b) => b.data['Stream Date'].valueOf() - a.data['Stream Date'].valueOf(),
  )

  // Get unique month-years
  const monthYears = [
    ...new Set(
      sortedVods.map((vod) =>
        vod.data['Stream Date'].toLocaleString('en-US', {
          month: 'long',
          year: 'numeric',
        }),
      ),
    ),
  ]

  return monthYears.map((monthYear) => {
    const monthVods = sortedVods.filter(
      (vod) =>
        vod.data['Stream Date'].toLocaleString('en-US', {
          month: 'long',
          year: 'numeric',
        }) === monthYear,
    )
    return {
      params: { monthYear: monthYear.toLowerCase().replace(' ', '-') },
      props: { monthYear, vods: monthVods },
    }
  })
}

const { monthYear, vods } = Astro.props
---

<Layout title={`${monthYear} VODs`} description={`Archive of Twitch streams from ${monthYear}`}>
  <main class="mx-auto max-w-screen-xl px-4 sm:px-6 lg:px-8">
    <div class="py-4">
      <Breadcrumbs
        items={[
          { href: '/vods', label: 'VODs', icon: 'lucide:film' },
          { href: '/vods/collection', label: 'Collections', icon: 'lucide:folder'},
          { label: monthYear, icon: 'lucide:calendar' },
        ]}
      />
    </div>
    <h1 class="mb-8 text-4xl font-bold">{monthYear} VODs</h1>
    <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
      {vods.map((vod) => (
        <VodCard vod={vod} />
      ))}
    </div>
  </main>
</Layout>
