---
import Layout from '@/layouts/Layout.astro'
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import { Card, CardHeader, CardTitle, CardDescription } from '@/components/ui/card'
import { getCollection } from 'astro:content'
import GameCard from '@/components/GameCard.astro'

const vods = await getCollection('vods')
const sortedVods = vods.sort(
  (a, b) => b.data.streamDate.valueOf() - a.data.streamDate.valueOf(),
)

const vodsByGame = sortedVods.reduce(
  (acc: Record<string, { vods: typeof vods; coverUrl: string }>, vod) => {
    const game = vod.data.game || 'Other'
    if (!acc[game]) {
      acc[game] = {
        vods: [],
        coverUrl: vod.data.gameCoverURL || ''
      }
    }
    acc[game].vods.push(vod)
    return acc
  },
  {} as Record<string, { vods: typeof vods; coverUrl: string }>,
)

// Sort games by number of VODs (descending)
const sortedGames = Object.entries(vodsByGame).sort((a, b) => 
  b[1].vods.length - a[1].vods.length
)
---

<Layout title="Streamed Games" description="Browse Twitch streams by game">
  <main class="mx-auto max-w-screen-xl px-4 sm:px-6 lg:px-8">
    <div class="py-4">
      <Breadcrumbs
        items={[
          { href: '/vods', label: 'VODs', icon: 'lucide:film' },
          { label: 'Games', icon: 'lucide:gamepad-2' },
        ]}
      />
    </div>
    <h1 class="mb-8 text-4xl font-bold">Streamed Games</h1>
    <div class="grid gap-4 grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6">
      {sortedGames.map(([game, { vods: gameVods, coverUrl }]) => (
        <GameCard
          game={game}
          coverUrl={coverUrl}
          vodCount={gameVods.length}
        />
      ))}
    </div>
  </main>
</Layout>
